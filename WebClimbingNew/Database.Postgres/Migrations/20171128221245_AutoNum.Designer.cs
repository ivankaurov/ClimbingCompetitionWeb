// <auto-generated />
using Climbing.Web.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Microsoft.EntityFrameworkCore.ValueGeneration;
using System;

namespace Database.Postgres.Migrations
{
    [DbContext(typeof(ClimbingContext))]
    [Migration("20171128221245_AutoNum")]
    partial class AutoNum
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("Climbing.Web.Model.Autonumeration.AutoNumDescription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Format")
                        .HasColumnName("format_string")
                        .HasMaxLength(255)
                        .IsUnicode(true);

                    b.Property<bool>("IncludeParentNumber")
                        .HasColumnName("include_parent_number");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("sequence_name")
                        .HasMaxLength(64)
                        .IsUnicode(true);

                    b.Property<bool>("SplitByParent")
                        .HasColumnName("split_sequence_by_parent");

                    b.Property<DateTimeOffset>("WhenChanged")
                        .HasColumnName("when_changed");

                    b.Property<DateTimeOffset>("WhenCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("when_created");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("autonum_descriptions");
                });

            modelBuilder.Entity("Climbing.Web.Model.Autonumeration.AutoNumValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("Counter")
                        .HasColumnName("value");

                    b.Property<Guid>("DescriptionId")
                        .HasColumnName("autonum_description_id");

                    b.Property<Guid?>("ParentObjectId")
                        .HasColumnName("split_by");

                    b.Property<DateTimeOffset>("WhenChanged")
                        .HasColumnName("when_changed");

                    b.Property<DateTimeOffset>("WhenCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("when_created");

                    b.HasKey("Id");

                    b.HasIndex("DescriptionId");

                    b.HasIndex("ParentObjectId", "DescriptionId");

                    b.ToTable("autonum_values");
                });

            modelBuilder.Entity("Climbing.Web.Model.Logging.Ltr", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("WhenChanged")
                        .HasColumnName("when_changed");

                    b.Property<DateTimeOffset>("WhenCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("when_created");

                    b.HasKey("Id");

                    b.ToTable("ltr");
                });

            modelBuilder.Entity("Climbing.Web.Model.Logging.LtrObject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ChangeTypeString")
                        .IsRequired()
                        .HasColumnName("ChangeType")
                        .HasMaxLength(16)
                        .IsUnicode(false);

                    b.Property<string>("LogObjectClass")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<Guid>("LtrId");

                    b.Property<Guid>("ObjectId");

                    b.Property<DateTimeOffset>("WhenChanged")
                        .HasColumnName("when_changed");

                    b.Property<DateTimeOffset>("WhenCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("when_created");

                    b.HasKey("Id");

                    b.HasIndex("LtrId");

                    b.ToTable("ltr_objects");
                });

            modelBuilder.Entity("Climbing.Web.Model.Logging.LtrObjectProperties", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("LtrObjectId");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("PropertyType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Value")
                        .HasColumnName("Value")
                        .IsUnicode(true);

                    b.Property<DateTimeOffset>("WhenChanged")
                        .HasColumnName("when_changed");

                    b.Property<DateTimeOffset>("WhenCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("when_created");

                    b.HasKey("Id");

                    b.HasIndex("LtrObjectId");

                    b.ToTable("ltr_object_properties");
                });

            modelBuilder.Entity("Climbing.Web.Model.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(255)
                        .IsUnicode(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(255)
                        .IsUnicode(true);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnName("surname")
                        .HasMaxLength(255)
                        .IsUnicode(true);

                    b.Property<DateTimeOffset>("WhenChanged")
                        .HasColumnName("when_changed");

                    b.Property<DateTimeOffset>("WhenCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("when_created");

                    b.HasKey("Id");

                    b.HasIndex("Surname", "Name", "DateOfBirth")
                        .IsUnique();

                    b.ToTable("people");
                });

            modelBuilder.Entity("Climbing.Web.Model.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("code")
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(255)
                        .IsUnicode(true);

                    b.Property<Guid?>("ParentId")
                        .HasColumnName("parent_team_id");

                    b.Property<DateTimeOffset>("WhenChanged")
                        .HasColumnName("when_changed");

                    b.Property<DateTimeOffset>("WhenCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("when_created");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("ParentId");

                    b.HasIndex("Name", "ParentId")
                        .IsUnique();

                    b.ToTable("teams");
                });

            modelBuilder.Entity("Climbing.Web.Model.Autonumeration.AutoNumValue", b =>
                {
                    b.HasOne("Climbing.Web.Model.Autonumeration.AutoNumDescription", "AutoNumDescription")
                        .WithMany("Values")
                        .HasForeignKey("DescriptionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Climbing.Web.Model.Logging.LtrObject", b =>
                {
                    b.HasOne("Climbing.Web.Model.Logging.Ltr", "Ltr")
                        .WithMany("Objects")
                        .HasForeignKey("LtrId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Climbing.Web.Model.Logging.LtrObjectProperties", b =>
                {
                    b.HasOne("Climbing.Web.Model.Logging.LtrObject", "LtrObject")
                        .WithMany("Properties")
                        .HasForeignKey("LtrObjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Climbing.Web.Model.Team", b =>
                {
                    b.HasOne("Climbing.Web.Model.Team", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");
                });
#pragma warning restore 612, 618
        }
    }
}
