// <auto-generated />
using Climbing.Web.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Microsoft.EntityFrameworkCore.ValueGeneration;
using System;

namespace Database.Postgres.Migrations
{
    [DbContext(typeof(ClimbingContext))]
    [Migration("20171103200003_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("Climbing.Web.Model.Logging.Ltr", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasMaxLength(64)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("ltr");
                });

            modelBuilder.Entity("Climbing.Web.Model.Logging.LtrObject", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasMaxLength(64)
                        .IsUnicode(false);

                    b.Property<string>("ChangeTypeString")
                        .IsRequired()
                        .HasColumnName("ChangeType")
                        .HasMaxLength(16)
                        .IsUnicode(false);

                    b.Property<string>("LogObjectClass")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("LtrId")
                        .IsRequired();

                    b.Property<string>("ObjectId");

                    b.HasKey("Id");

                    b.HasIndex("LtrId");

                    b.ToTable("ltr_objects");
                });

            modelBuilder.Entity("Climbing.Web.Model.Logging.LtrObjectProperties", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasMaxLength(64)
                        .IsUnicode(false);

                    b.Property<string>("LtrObjectId")
                        .IsRequired();

                    b.Property<string>("NewValue");

                    b.Property<string>("OldValue");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("PropertyType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("LtrObjectId");

                    b.ToTable("ltr_object_properties");
                });

            modelBuilder.Entity("Climbing.Web.Model.Logging.LtrObject", b =>
                {
                    b.HasOne("Climbing.Web.Model.Logging.Ltr", "Ltr")
                        .WithMany("Objects")
                        .HasForeignKey("LtrId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Climbing.Web.Model.Logging.LtrObjectProperties", b =>
                {
                    b.HasOne("Climbing.Web.Model.Logging.LtrObject", "LtrObject")
                        .WithMany("Properties")
                        .HasForeignKey("LtrObjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
